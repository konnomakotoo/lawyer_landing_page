version: '3.8'
 
networks:
  web:
  backend:

services:
  traefik:
    image: traefik:v2.10
    command:
      - --configFile=/etc/traefik/traefik.yml
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/acme.json:/letsencrypt/acme.json
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - web

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client.rule=Host(`bakaevpartners.ru`)"
      - "traefik.http.routers.client.entrypoints=websecure"
      - "traefik.http.routers.client.tls.certresolver=le"
      - "traefik.http.services.client.loadbalancer.server.port=80"
    networks:
      - web

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    env_file:
      - ./server/.env
    environment:
      DB_HOST: db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.bakaevpartners.ru`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=le"
      - "traefik.http.services.api.loadbalancer.server.port=3000"
    depends_on:
      - db
    networks:
      - web
      - backend

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER:  ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASS:-postgres}
      POSTGRES_DB:   ${DB_NAME:-lawyer}
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - backend

volumes:
  db-data: