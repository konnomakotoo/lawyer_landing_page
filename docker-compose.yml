version: '3.8'

networks:
  web:
  backend:

services:
  traefik:
    image: traefik:v2.10
    command:
      - --configFile=/etc/traefik/traefik.yml
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/acme.json:/letsencrypt/acme.json
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - web

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    labels:
      # 1) HTTP-роутер (порт 80), сразу редиректит на HTTPS
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.client-http.rule=Host(`bakaevpartners.ru`)"
      - "traefik.http.routers.client-http.entrypoints=web"
      - "traefik.http.routers.client-http.middlewares=redirect-to-https@docker"

      # 2) HTTPS-роутер (порт 443) с TLS и обслуживанием контейнера
      - "traefik.http.routers.client.rule=Host(`bakaevpartners.ru`) && !PathPrefix(`/api`)"
      - "traefik.http.routers.client.entrypoints=websecure"
      - "traefik.http.routers.client.tls.certresolver=le"
      - "traefik.http.services.client.loadbalancer.server.port=80"
      - "traefik.http.routers.client.priority=1"

      # 3) Определяем сам middleware редиректа (HTTP→HTTPS)
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    networks:
      - web

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - 'traefik.http.routers.server.rule=Host(`bakaevpartners.ru`) && PathPrefix(`/api`)'
      - "traefik.http.routers.server.entrypoints=websecure"
      - "traefik.http.routers.server.tls.certresolver=le"
      - "traefik.http.services.server.loadbalancer.server.port=3000"
      - "traefik.http.routers.server.priority=10"
            # === CORS middleware definition ===
      - "traefik.http.middlewares.api-cors.headers.accessControlAllowOriginList=https://bakaevpartners.ru"
      - "traefik.http.middlewares.api-cors.headers.accessControlAllowMethods=GET,POST,OPTIONS,PUT,DELETE"
      - "traefik.http.middlewares.api-cors.headers.accessControlAllowHeaders=Content-Type,Authorization"
      - "traefik.http.middlewares.api-cors.headers.accessControlAllowCredentials=true"
      - "traefik.http.middlewares.api-cors.headers.accessControlMaxAge=86400"
      # === Привязка CORS middleware к роутеру ===
      - "traefik.http.routers.server.middlewares=api-cors@docker"
    depends_on:
      - db
    networks:
      - web
      - backend

  db:
    image: postgres:15-alpine
    env_file:
      - ./.env
    environment:
      POSTGRES_USER:  ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB:   ${DB_NAME}
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"
    networks:
      - backend

volumes:
  db-data:
